## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/documentation
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handles the API request and renders the Swagger documentation view.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <title>L5 Swagger UI</title>
              <link rel="stylesheet" type="text/css" href="http://localhost/docs/asset/swagger-ui.css?v=994a2f7cde1088d30c09c74c0488c9e3">
              <link rel="icon" type="image/png" href="http://localhost/docs/asset/favicon-32x32.png?v=40d4f2c38d1cd854ad463f16373cbcb6" sizes="32x32"/>
              <link rel="icon" type="image/png" href="http://localhost/docs/asset/favicon-16x16.png?v=f0ae831196d55d8f4115b6c5e8ec5384" sizes="16x16"/>
              <style>
              html
              {
                  box-sizing: border-box;
                  overflow: -moz-scrollbars-vertical;
                  overflow-y: scroll;
              }
              *,
              *:before,
              *:after
              {
                  box-sizing: inherit;
              }

              body {
                margin:0;
                background: #fafafa;
              }
              </style>
              </head>

          <body >
          <div id="swagger-ui"></div>

          <script src="http://localhost/docs/asset/swagger-ui-bundle.js?v=6eff6606413cd6815b65e9c4982d4d3d"></script>
          <script src="http://localhost/docs/asset/swagger-ui-standalone-preset.js?v=c52d69e3948ac5fdffc432e95fc737a3"></script>
          <script>
              window.onload = function() {
                  const urls = [];

                              urls.push({name: "L5 Swagger UI", url: "http://localhost/docs?api-docs.json"});
                  
                  // Build a system
                  const ui = SwaggerUIBundle({
                      dom_id: '#swagger-ui',
                      urls: urls,
                      "urls.primaryName": "L5 Swagger UI",
                      operationsSorter: null,
                      configUrl: null,
                      validatorUrl: null,
                      oauth2RedirectUrl: "http://localhost/api/oauth2-callback",

                      requestInterceptor: function(request) {
                          request.headers['X-CSRF-TOKEN'] = '';
                          return request;
                      },

                      presets: [
                          SwaggerUIBundle.presets.apis,
                          SwaggerUIStandalonePreset
                      ],

                      plugins: [
                          SwaggerUIBundle.plugins.DownloadUrl
                      ],

                      layout: "StandaloneLayout",
                      docExpansion : "none",
                      deepLinking: true,
                      filter: true,
                      persistAuthorization: "false",

                  })

                  window.ui = ui

                      }
          </script>
          </body>
          </html>
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/oauth2-callback
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handles the OAuth2 callback and retrieves the required file for the redirect.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          <!doctype html>
          <html lang="en-US">
          <head>
              <title>Swagger UI: OAuth2 Redirect</title>
          </head>
          <body>
          <script>
              'use strict';
              function run () {
                  var oauth2 = window.opener.swaggerUIRedirectOauth2;
                  var sentState = oauth2.state;
                  var redirectUrl = oauth2.redirectUrl;
                  var isValid, qp, arr;

                  if (/code|token|error/.test(window.location.hash)) {
                      qp = window.location.hash.substring(1).replace('?', '&');
                  } else {
                      qp = location.search.substring(1);
                  }

                  arr = qp.split("&");
                  arr.forEach(function (v,i,_arr) { _arr[i] = '"' + v.replace('=', '":"') + '"';});
                  qp = qp ? JSON.parse('{' + arr.join() + '}',
                          function (key, value) {
                              return key === "" ? value : decodeURIComponent(value);
                          }
                  ) : {};

                  isValid = qp.state === sentState;

                  if ((
                    oauth2.auth.schema.get("flow") === "accessCode" ||
                    oauth2.auth.schema.get("flow") === "authorizationCode" ||
                    oauth2.auth.schema.get("flow") === "authorization_code"
                  ) && !oauth2.auth.code) {
                      if (!isValid) {
                          oauth2.errCb({
                              authId: oauth2.auth.name,
                              source: "auth",
                              level: "warning",
                              message: "Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server."
                          });
                      }

                      if (qp.code) {
                          delete oauth2.state;
                          oauth2.auth.code = qp.code;
                          oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});
                      } else {
                          let oauthErrorMsg;
                          if (qp.error) {
                              oauthErrorMsg = "["+qp.error+"]: " +
                                  (qp.error_description ? qp.error_description+ ". " : "no accessCode received from the server. ") +
                                  (qp.error_uri ? "More info: "+qp.error_uri : "");
                          }

                          oauth2.errCb({
                              authId: oauth2.auth.name,
                              source: "auth",
                              level: "error",
                              message: oauthErrorMsg || "[Authorization failed]: no accessCode received from the server."
                          });
                      }
                  } else {
                      oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});
                  }
                  window.close();
              }

              if (document.readyState !== 'loading') {
                  run();
              } else {
                  document.addEventListener('DOMContentLoaded', function () {
                      run();
                  });
              }
          </script>
          </body>
          </html>
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/test
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"API is working!"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      login:
        name: login
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pass:
        name: pass
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      login: consequatur
      pass: consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nom:
        name: nom
        description: 'Must not be greater than 20 characters.'
        required: true
        example: vmqeopfuudtdsufvy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      login:
        name: login
        description: 'Must not be greater than 20 characters.'
        required: true
        example: vddqamniihfqcoynl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pass:
        name: pass
        description: 'Must be at least 8 characters.'
        required: true
        example: azghdtqtqxbajwbpilpmufinllwloauydlsmsjuryvojcybzvrbyickznkygloigmkwxphlvazj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      nom: vmqeopfuudtdsufvy
      login: vddqamniihfqcoynl
      pass: azghdtqtqxbajwbpilpmufinllwloauydlsmsjuryvojcybzvrbyickznkygloigmkwxphlvazj
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/etudiants
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/etudiants
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nom:
        name: nom
        description: 'Must not be greater than 20 characters.'
        required: true
        example: vmqeopfuudtdsufvy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      login:
        name: login
        description: 'Must not be greater than 20 characters.'
        required: true
        example: vddqamniihfqcoynl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pass:
        name: pass
        description: 'Must be at least 8 characters.'
        required: true
        example: azghdtqtqxbajwbpilpmufinllwloauydlsmsjuryvojcybzvrbyickznkygloigmkwxphlvazj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      note1:
        name: note1
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      note2:
        name: note2
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: false
        example: 11613.31890586
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      latitude:
        name: latitude
        description: ''
        required: false
        example: 11613.31890586
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      nom: vmqeopfuudtdsufvy
      login: vddqamniihfqcoynl
      pass: azghdtqtqxbajwbpilpmufinllwloauydlsmsjuryvojcybzvrbyickznkygloigmkwxphlvazj
      note1: 17
      note2: 17
      longitude: 11613.31890586
      latitude: 11613.31890586
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/etudiants/{etudiant_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      etudiant_id:
        name: etudiant_id
        description: 'The ID of the etudiant.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      etudiant_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nom:
        name: nom
        description: 'Must not be greater than 20 characters.'
        required: false
        example: vmqeopfuudtdsufvy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      note1:
        name: note1
        description: ''
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      note2:
        name: note2
        description: ''
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: false
        example: 11613.31890586
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      latitude:
        name: latitude
        description: ''
        required: false
        example: 11613.31890586
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      nom: vmqeopfuudtdsufvy
      note1: 17
      note2: 17
      longitude: 11613.31890586
      latitude: 11613.31890586
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/images
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/images
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/quiz1
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/quiz2
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
